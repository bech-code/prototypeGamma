#!/usr/bin/env python3
"""
Script de test pour v√©rifier que la g√©olocalisation dans BookingForm fonctionne correctement
"""

import requests
import json
import time

def test_geolocation_booking():
    """Test de la g√©olocalisation dans BookingForm"""
    print("üîß Test de la g√©olocalisation dans BookingForm...")
    print("=" * 60)
    
    # Test du frontend
    try:
        response = requests.get('http://127.0.0.1:5173', timeout=5)
        print(f"‚úÖ Frontend accessible (status: {response.status_code})")
        
        # V√©rifier que le composant BookingForm est accessible
        if 'BookingForm' in response.text or 'booking' in response.text.lower():
            print("‚úÖ Composant BookingForm d√©tect√©")
        else:
            print("‚ö†Ô∏è Composant BookingForm non d√©tect√©")
            
    except Exception as e:
        print(f"‚ùå Frontend non accessible: {e}")
        return False
    
    # Test du backend
    try:
        response = requests.get('http://127.0.0.1:8000/depannage/api/test/', timeout=5)
        print(f"‚úÖ Backend ASGI accessible (status: {response.status_code})")
    except Exception as e:
        print(f"‚ö†Ô∏è Backend ASGI non accessible: {e}")
    
    print("\nüìã R√©sum√© des am√©liorations appliqu√©es:")
    print("-" * 40)
    
    improvements = [
        "‚úÖ Suppression de la duplication du message d'erreur",
        "‚úÖ √âviter les appels multiples de g√©olocalisation",
        "‚úÖ Message d'erreur unique et clair",
        "‚úÖ Modal de g√©olocalisation am√©lior√©",
        "‚úÖ Gestion des √©tats de chargement",
        "‚úÖ Messages d'erreur sp√©cifiques selon le code"
    ]
    
    for improvement in improvements:
        print(improvement)
    
    print("\nüéØ Fonctionnalit√©s de g√©olocalisation:")
    print("-" * 40)
    features = [
        "‚Ä¢ Modal de g√©olocalisation obligatoire",
        "‚Ä¢ Messages d'erreur en fran√ßais",
        "‚Ä¢ Gestion des diff√©rents codes d'erreur",
        "‚Ä¢ √âtat de chargement pendant la g√©olocalisation",
        "‚Ä¢ Pr√©-remplissage automatique des champs d'adresse",
        "‚Ä¢ Validation de la g√©olocalisation avant soumission"
    ]
    
    for feature in features:
        print(f"  {feature}")
    
    print("\nüí° Codes d'erreur g√©r√©s:")
    print("-" * 30)
    error_codes = {
        1: "PERMISSION_DENIED - Permission refus√©e",
        2: "POSITION_UNAVAILABLE - Position non disponible", 
        3: "TIMEOUT - D√©lai d'attente d√©pass√©"
    }
    
    for code, description in error_codes.items():
        print(f"  Code {code}: {description}")
    
    print("\n‚úÖ Test de la g√©olocalisation dans BookingForm termin√© !")
    return True

if __name__ == "__main__":
    test_geolocation_booking() 