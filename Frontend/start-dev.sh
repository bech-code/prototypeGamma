#!/bin/bash

# Script de d√©marrage pour le frontend DepanneTeliman
# Ce script v√©rifie les pr√©requis et d√©marre l'application en mode d√©veloppement

echo "üöÄ D√©marrage du frontend DepanneTeliman..."
echo "=========================================="

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages color√©s
print_status() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# V√©rifier si Node.js est install√©
if ! command -v node &> /dev/null; then
    print_error "Node.js n'est pas install√©. Veuillez l'installer depuis https://nodejs.org/"
    exit 1
fi

# V√©rifier la version de Node.js
NODE_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt 16 ]; then
    print_warning "Node.js version $NODE_VERSION d√©tect√©e. Version 16+ recommand√©e."
else
    print_status "Node.js version $(node -v) d√©tect√©e"
fi

# V√©rifier si npm est install√©
if ! command -v npm &> /dev/null; then
    print_error "npm n'est pas install√©. Veuillez l'installer."
    exit 1
fi

print_status "npm version $(npm -v) d√©tect√©"

# V√©rifier si le backend est en cours d'ex√©cution
print_info "V√©rification de la connectivit√© backend..."
if curl -s http://127.0.0.1:8000/depannage/api/test/health-check/ > /dev/null; then
    print_status "Backend Django accessible"
else
    print_warning "Backend Django non accessible sur http://127.0.0.1:8000"
    print_info "Assurez-vous que le backend est d√©marr√© avec: cd Backend && python manage.py runserver"
fi

# V√©rifier si les d√©pendances sont install√©es
if [ ! -d "node_modules" ]; then
    print_info "Installation des d√©pendances..."
    npm install
    if [ $? -eq 0 ]; then
        print_status "D√©pendances install√©es avec succ√®s"
    else
        print_error "Erreur lors de l'installation des d√©pendances"
        exit 1
    fi
else
    print_status "D√©pendances d√©j√† install√©es"
fi

# V√©rifier si le fichier package.json existe
if [ ! -f "package.json" ]; then
    print_error "package.json non trouv√©. Assurez-vous d'√™tre dans le bon r√©pertoire."
    exit 1
fi

# Afficher les informations importantes
echo ""
print_info "INFORMATIONS IMPORTANTES:"
echo "  ‚Ä¢ Acc√©dez √† l'application via: http://localhost:5173"
echo "  ‚Ä¢ N'utilisez PAS file:// pour ouvrir index.html"
echo "  ‚Ä¢ Le panneau de diagnostic est disponible en bas √† droite (mode dev)"
echo "  ‚Ä¢ En cas de probl√®me, utilisez le script clean-cache.sh"
echo ""

# D√©marrer l'application
print_info "D√©marrage de l'application en mode d√©veloppement..."
echo "  URL: http://localhost:5173"
echo "  Pour arr√™ter: Ctrl+C"
echo ""

# D√©marrer Vite
npm run dev 